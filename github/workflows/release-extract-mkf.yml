name: MKF: extract release to Pages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag to extract (e.g. mkf-v1.0)"
        required: true
        default: mkf-v1.0

jobs:
  extract:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Resolve tag
        id: t
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ inputs.tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
          fi
          echo "Using tag: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.event.release.tag_name }}"

      - name: Download release ZIPs
        uses: robinraju/release-downloader@v1.9
        with:
          repository: callkaidsroofing/callkaidsroofing
          tag: ${{ steps.t.outputs.TAG }}
          fileName: "*.zip"
          out-file-path: _mkf_zips
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify downloads
        shell: bash
        run: |
          ls -la _mkf_zips || true
          count=$(ls -1 _mkf_zips/*.zip 2>/dev/null | wc -l || true)
          echo "ZIP_COUNT=$count"
          [ "$count" -gt 0 ] || { echo "No *.zip assets found for tag. Check the Release tag or assets."; exit 1; }

      - name: Unzip into docs
        shell: bash
        run: |
          set -e
          TARGET="docs/mkf/${{ steps.t.outputs.TAG }}"
          mkdir -p "$TARGET"
          shopt -s nullglob
          for z in _mkf_zips/*.zip; do
            echo "Unzipping $z -> $TARGET"
            unzip -o "$z" -d "$TARGET"
          done

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build mkf_index.json
        shell: bash
        run: |
          set -e
          ROOT="docs/mkf/${{ steps.t.outputs.TAG }}"
          echo '{"files":[]}' > "$ROOT/mkf_index.json"
          while IFS= read -r -d '' f; do
            rel="${f#$ROOT/}"
            sha=$(sha256sum "$f" | cut -d ' ' -f1)
            url="https://callkaidsroofing.github.io/callkaidsroofing/mkf/${{ steps.t.outputs.TAG }}/$rel"
            jq --arg p "mkf/${{ steps.t.outputs.TAG }}/$rel" --arg s "$sha" --arg u "$url" \
               '.files += [{"path":$p,"sha256":$s,"url":$u}]' "$ROOT/mkf_index.json" > "$ROOT/.tmp" && mv "$ROOT/.tmp" "$ROOT/mkf_index.json"
          done < <(find "$ROOT" -type f -print0)

      - name: Commit extracted files and index
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(mkf): extract ${{ steps.t.outputs.TAG }} to docs and index"
